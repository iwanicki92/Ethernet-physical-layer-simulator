from ..Tools.StringTools import str_spice as str_spice
from ..Unit import Unit as Unit
from _typeshed import Incomplete

class ParameterDescriptor:
    def __init__(self, default: Incomplete | None = ...) -> None: ...
    @property
    def default_value(self): ...
    @property
    def attribute_name(self): ...
    def __get__(self, instance, owner: Incomplete | None = ...): ...
    def __set__(self, instance, value) -> None: ...
    def validate(self, value): ...
    def nonzero(self, instance): ...
    def to_str(self, instance) -> None: ...
    def __lt__(self, other): ...

class PositionalElementParameter(ParameterDescriptor):
    def __init__(self, position, default: Incomplete | None = ..., key_parameter: bool = ...) -> None: ...
    @property
    def position(self): ...
    @property
    def key_parameter(self): ...
    def to_str(self, instance): ...
    def __lt__(self, other): ...

class ElementNamePositionalParameter(PositionalElementParameter):
    def validate(self, value): ...

class ExpressionPositionalParameter(PositionalElementParameter):
    def validate(self, value): ...

class FloatPositionalParameter(PositionalElementParameter):
    def __init__(self, position, unit: Incomplete | None = ..., **kwargs) -> None: ...
    def validate(self, value): ...

class InitialStatePositionalParameter(PositionalElementParameter):
    def validate(self, value): ...
    def to_str(self, instance): ...

class ModelPositionalParameter(PositionalElementParameter):
    def validate(self, value): ...

class FlagParameter(ParameterDescriptor):
    spice_name: Incomplete
    def __init__(self, spice_name, default: bool = ...) -> None: ...
    def nonzero(self, instance): ...
    def to_str(self, instance): ...

class KeyValueParameter(ParameterDescriptor):
    spice_name: Incomplete
    def __init__(self, spice_name, default: Incomplete | None = ...) -> None: ...
    def str_value(self, instance): ...
    def to_str(self, instance): ...

class BoolKeyParameter(KeyValueParameter):
    def nonzero(self, instance): ...
    def str_value(self, instance): ...

class ExpressionKeyParameter(KeyValueParameter):
    def validate(self, value): ...

class FloatKeyParameter(KeyValueParameter):
    def __init__(self, spice_name, unit: Incomplete | None = ..., **kwargs) -> None: ...
    def validate(self, value): ...

class FloatPairKeyParameter(KeyValueParameter):
    def validate(self, pair): ...
    def str_value(self, instance): ...

class FloatTripletKeyParameter(FloatPairKeyParameter):
    def validate(self, uplet): ...

class IntKeyParameter(KeyValueParameter):
    def validate(self, value): ...
